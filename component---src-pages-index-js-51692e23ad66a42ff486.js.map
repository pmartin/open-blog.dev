{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/constants/langs.js","webpack:///./src/components/articleItem.js","webpack:///./src/components/articleList.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_articleList__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","data","a","createElement","title","articleList","allMarkdownRemark","edges","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","display","alignItems","justifyContent","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","paddingTop","_755544856","node","langs","fr","en","ArticleItem","fields","slug","className","frontmatter","lang","tags","map","tag","index","pseudo","author","excerpt","hero","srcSet","childImageSharp","fluid","srcSetWebp","sizes","type","src","alt","articleList_ArticleList","ArticleList","listStyle","_ref2","components_articleItem","SEO","description","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","link","rel","href","name","content","property","concat","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-51692e23ad66a42ff486.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { ArticleList } from \"../components/articleList\"\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h2>Last blog posts :</h2>\n    <ArticleList articleList={data.allMarkdownRemark.edges} />\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { type: { ne: \"doc\" } } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            lang\n            tags\n            author\n            pseudo\n            hero {\n              childImageSharp {\n                fluid(maxWidth: 200) {\n                  ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#3f51b5`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <nav\n      style={{\n        display: \"flex\",\n        alignItems: \"baseline\",\n        justifyContent: \"space-between\",\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n\n      <h2\n        style={{\n          margin: 0,\n        }}\n      >\n        <Link\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n          to=\"contributing\"\n        >\n          Contribute\n        </Link>\n      </h2>\n    </nav>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","export default {\n  fr: \"🇫🇷\",\n  en: \"🇬🇧\",\n}\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport langs from \"../constants/langs\"\n\nimport \"./articleItem.css\"\n\nconst ArticleItem = ({ node }) => (\n  <Link\n    to={node.fields.slug}\n    style={{ textDecoration: \"none\", color: \"black\" }}\n  >\n    <article className=\"article-item\">\n      <header>\n        <h3\n          className=\"article-item__title\"\n          style={{\n            margin: \"0.5rem 0\",\n          }}\n        >\n          {langs[node.frontmatter.lang] || langs.en} {node.frontmatter.title}\n        </h3>\n        <span>\n          {node.frontmatter.tags.map((tag, index) => (\n            <Link\n              to={`tags/${tag}`}\n              style={{\n                margin: \"0 0.2rem\",\n                textDecoration: \"none\",\n                color: \"#3f51b5\",\n              }}\n            >\n              #{tag}\n            </Link>\n          ))}\n          &nbsp;by{\" \"}\n          <Link to={node.frontmatter.pseudo}>{node.frontmatter.author}</Link>\n        </span>\n        <p>{node.excerpt}</p>\n      </header>\n      {node.frontmatter.hero && (\n        <picture>\n          <source\n            srcSet={node.frontmatter.hero.childImageSharp.fluid.srcSetWebp}\n            sizes=\"30vw\"\n            type=\"image/webp\"\n          />\n          <source\n            srcSet={node.frontmatter.hero.childImageSharp.fluid.srcSet}\n            sizes=\"30vw\"\n            type=\"image/png\"\n          />\n          <img\n            className=\"article-item__picture\"\n            src={node.frontmatter.hero.childImageSharp.fluid.src}\n            alt=\"hero\"\n          />\n        </picture>\n      )}\n    </article>\n  </Link>\n)\n\nexport default ArticleItem\n","import React from \"react\"\nimport ArticleItem from \"./articleItem\"\n\nexport const ArticleList = ({ articleList }) => (\n  <nav>\n    <ul style={{ margin: 0, listStyle: \"none\" }}>\n      {articleList.map(({ node }) => (\n        <li>\n          <ArticleItem node={node} />\n        </li>\n      ))}\n    </ul>\n  </nav>\n)\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      link={[\n        {\n          rel: \"alternate\",\n          type: \"application/rss+xml\",\n          title: \"Subscribe to What's New on Open Blog\",\n          href: \"https://open-blog.dev/rss.xml\",\n        },\n      ]}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}